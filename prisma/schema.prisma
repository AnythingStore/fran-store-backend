// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") //LOCAL_DATABASE_URL DATABASE_URL
}

model User {
  id       Int    @id @default(autoincrement())
  password String
  username String @unique
}

model Image {
  id        Int        @id @default(autoincrement())
  url       String
  filename  String
  mimetype  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt
  productId Int?
  product   Product?   @relation(fields: [productId], references: [id])
  Category  Category?
  Carousel  Carousel?
  StoreInfo StoreInfo?
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Int      @default(0)
  stock       Int      @default(0)
  available   Boolean  @default(true)
  categoryId  Int
  category    Category @relation(fields: [categoryId], references: [id])
  images      Image[]
  orderImage  Json     @default("[]") // Lista de IDs de im√°genes
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model Category {
  id        Int       @id @default(autoincrement())
  products  Product[]
  imageId   Int?      @unique
  image     Image?    @relation(fields: [imageId], references: [id])
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
}

model Carousel {
  id          Int      @id @default(autoincrement())
  imageId     Int?     @unique
  image       Image?   @relation(fields: [imageId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model CarouselOrder{
  id          Int    @id @default(autoincrement())
  orderCarousel  Json   @default("[]") // Lista de Ids de carousel
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
}

model StoreInfo {
  id          Int    @id @default(autoincrement())
  name        String  @default("")
  description String  @default("")
  
  address     String  @default("")
  openDays     String  @default("")
  
  phone       String  @default("")
  email       String  @default("")
  facebook    String  @default("")
  instagram   String  @default("")

  imageId Int?   @unique
  image   Image? @relation(fields: [imageId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
